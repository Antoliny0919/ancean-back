FROM ubuntu:20.04 AS builder-image

# avoid user interaction
ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install --no-install-recommends -y python3.9 python3.9-dev \ 
	python3.9-venv default-libmysqlclient-dev pkg-config python3-pip python3-wheel build-essential && \
	apt-get clean && rm -rf /var/lib/apt/lists/*

# package management
RUN python3.9 -m venv /usr/app/venv
ENV PATH="/usr/app/venv/bin:$PATH"

# install requirements
COPY /requirements.txt .
RUN pip3 install --no-cache-dir wheel
RUN pip3 install --no-cache-dir -r requirements.txt

FROM ubuntu:20.04 AS runner-image

RUN apt-get update && apt-get install --no-install-recommends -y python3.9 python3-venv \ 
	default-libmysqlclient-dev wget && \
	apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /usr/app

COPY . .
COPY --from=builder-image usr/app/venv ./venv

ARG APP_ENV=prod

ENV PYTHON_VERSION=3.9
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DJANGO_SETTINGS_MODULE ancean.settings.$APP_ENV

# activate virtual environment
ENV VIRTUAL_ENV=/usr/app/venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
ENV DOCKERIZE_VERSION v0.7.0

EXPOSE 8000

RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-arm64-$DOCKERIZE_VERSION.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-linux-arm64-$DOCKERIZE_VERSION.tar.gz \
    && rm dockerize-linux-arm64-$DOCKERIZE_VERSION.tar.gz

ENTRYPOINT ["dockerize", "-wait", "tcp://ancean_db:3306", "-timeout", "20s"]

# use gunicorn WSGI
CMD ["gunicorn","-w","2", "--bind","0.0.0.0:8000", "-m", "007", "ancean.wsgi:application"]
